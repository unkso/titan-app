openapi: 3.0.2
info:
  title: Titan
  version: '1.0'
  license:
    name: MIT
    url: 'https://github.com/unkso/titan-app/blob/master/LICENSE'
servers:
  - url: 'http://localhost:3000'
paths:
  /api/auth/woltlab:
    post:
      summary: woltlab
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: woltlab_login_response
                type: object
                properties:
                  user_id:
                    type: integer
                  token:
                    type: string
                required:
                  - user_id
                  - token
      operationId: post-auth-woltlab
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: auth_woltlab_fields
              type: object
              properties:
                wcf_user_id:
                  type: integer
                cookie_password:
                  type: string
              required:
                - wcf_user_id
                - cookie_password
  /api/users:
    get:
      summary: list_users
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/user_profile.v1.yaml
      operationId: get-users
      parameters:
        - schema:
            type: string
          in: query
          name: username
        - schema:
            type: integer
          in: query
          name: limit
      security:
        - api_key: []
  /api/users/me:
    get:
      summary: get_authenticated_user
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/user_profile.v1.yaml
      operationId: get-authenticated-user
      security:
        - api_key: []
  /api/users/{user_id}:
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: get_user
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/user_profile.v1.yaml
      operationId: get-user
      security:
        - api_key: []
  /api/users/{user_id}/acl:
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
    get:
      operationId: get_user_acl
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/wcf_user_group_option.v1.yaml
      security:
        - api_key: []
  /api/users/excuses/unacknowledged:
    get:
      summary: list_unacknowledged_excuses
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/user_event_excuse_with_assoc.v1.yaml
      operationId: get-users-excuses-unacknowledged
      security:
        - api_key: []
  /api/users/file-entry-types:
    get:
      summary: list_user_file_entry_types
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/user_file_entry_type.v1.yaml
      operationId: get-users-file-entry-types
      security:
        - api_key: []
  '/api/users/{user_id}/file-entries':
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: list_user_file_entries
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/user_file_entry_with_assoc.v1.yaml
      operationId: get-users-user_id-file-entries
      security:
        - api_key: []
  '/api/users/{user_id}/excuses':
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: list_user_event_excuses
      tags: []
      operationId: get-users-user_id-excuses
      security:
        - api_key: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/user_event_excuse_with_assoc.v1.yaml
    post:
      summary: save_user_event_excuse
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    $ref: ./models/user_event_excuse_with_assoc.v1.yaml
      operationId: post-users-user_id-excuses
      security:
        - api_key: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: add_user_excuse_fields
              type: object
              properties:
                event_date:
                  type: integer
                event_type_id:
                  type: integer
                comments:
                  type: string
              required:
                - event_date
                - event_type_id
                - comments
  '/api/users/{user_id}/organizations':
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: list_user_organizations
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/user_organization_membership.v1.yaml
      operationId: get-user-organizations
      parameters:
        - schema:
            type: boolean
          in: query
          name: member
        - schema:
            type: boolean
          in: query
          name: role
      security:
        - api_key: []
  '/api/organizations/{org_id}/users':
    parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: integer
    post:
      summary: add_user
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      operationId: post-organizations-org_id-users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: add_organization_user_fields
              type: object
              properties:
                user_id:
                  type: integer
              required:
                - user_id
      security:
        - api_key: []
    delete:
      summary: remove_user
      tags: []
      responses:
        '200':
          description: OK
      operationId: delete-organization-user
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              title: delete_organization_user_fields
              type: object
              properties:
                user_id:
                  type: integer
              required:
                - user_id
        required: true
  '/api/organizations/{org_id}/reports/{report_id}/ack':
    parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: integer
      - name: report_id
        in: path
        required: true
        schema:
          type: integer
    post:
      summary: ack_organization_report
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/report_with_assoc.v1.yaml
      operationId: post-organizations-org_id-reports-report_id-ack
      security:
        - api_key: []
  '/api/organizations/{org_id}/reports':
    parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: integer
    post:
      summary: create_organization_report
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/report_with_assoc.v1.yaml
      operationId: post-organizations-org_id-reports
      security:
        - api_key: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: create_organization_fields
              type: object
              properties:
                comments:
                  type: string
                term_start_date:
                  type: integer
              required:
                - comments
                - term_start_date
    get:
      summary: list_organization_reports
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/report_with_assoc.v1.yaml
      operationId: get-organizations-org_id-reports
      security:
        - api_key: []
  '/api/organizations/{org_id}/roles':
    parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: integer
    post:
      summary: create_organization_role
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/organization_role_with_assoc.v1.yaml
      operationId: post-organizations-org_id-roles
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/update_organization_role.v1.yaml
    get:
      summary: list_organization_roles
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/organization_role_with_assoc.v1.yaml
      operationId: get-organizations-org_id-roles
      parameters:
        - schema:
            type: integer
          in: query
          name: scope
          required: true
      security:
        - api_key: []
  /api/organizations:
    get:
      summary: list_organizations
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/organization.v1.yaml
      operationId: get-organizations
      security:
        - api_key: []
      description: ''
  /api/organizations/reports/unacknowledged:
    get:
      summary: get_all_unacknowledged_reports
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/report_with_assoc.v1.yaml
      operationId: get-organizations-reports-unacknowledged
      security:
        - api_key: []
  '/api/organizations/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: get_organization_by_id
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/organization.v1.yaml
      operationId: get-organizations-id
      security:
        - api_key: []
  '/api/organizations/{slug}':
    parameters:
      - name: slug
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: get_organization_by_slug
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/organization.v1.yaml
      operationId: get-organizations-slug
      security:
        - api_key: []
  '/api/organizations/{id}/users':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: get_organization_users
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/user_profile.v1.yaml
      operationId: get-organizations-id-users
      security:
        - api_key: []
      parameters:
        - schema:
            type: boolean
          in: query
          name: children
  '/api/organizations/roles/{role_id}/parent':
    parameters:
      - name: role_id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: get_parent_role
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/organization_role_with_assoc.v1.yaml
      operationId: get-organizations-roles-role_id-parent
      security:
        - api_key: []
  '/api/organizations/{org_id}/users/{user_id}/coc':
    parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: integer
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: get_organization_user_coc
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/chain_of_command.v1.yaml
      operationId: get-organizations-org_id-users-user_id-coc
      security:
        - api_key: []
  '/api/organizations/{org_id}/coc':
    parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: get_organization_coc
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/chain_of_command.v1.yaml
      operationId: get-organizations-org_id-coc
      security:
        - api_key: []
  '/api/organizations/{org_id}/roles/unranked':
    parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: get_organization_unranked_roles
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/organization_role_with_assoc.v1.yaml
      operationId: get-organizations-org_id-roles-unranked
      security:
        - api_key: []
  '/api/organizations/{org_id}/children':
    parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: get_child_organizations
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/organization.v1.yaml
      operationId: get-organizations-org_id-children
      security:
        - api_key: []
  /api/organizations/file-entries:
    get:
      summary: list_organization_user_file_entries
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/user_file_entry_with_assoc.v1.yaml
      operationId: get-organizations-file-entries
      security:
        - api_key: []
      parameters:
        - schema:
            type: string
          in: query
          name: organizations
          required: true
        - schema:
            type: integer
          in: query
          name: from_start_date
          required: true
        - schema:
            type: integer
          in: query
          name: to_start_date
          required: true
  '/api/organizations/{org_id}/roles:reorder':
    parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: integer
    post:
      summary: reorder_roles
      tags: []
      responses:
        '200':
          description: OK
      operationId: 'post-organizations-org_id-roles:reorder'
      security:
        - api_key: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: reorder_organization_roles_fields
              type: object
              properties:
                role_ids:
                  type: array
                  items:
                    type: integer
  '/api/organizations/{org_id}/roles/{role_id}':
    parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: integer
      - name: role_id
        in: path
        required: true
        schema:
          type: integer
    post:
      summary: update_organization_role_fields
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/organization_role_with_assoc.v1.yaml
      operationId: post-organizations-org_id-roles-role_id
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/update_organization_role.v1.yaml
  '/api/events/event-types/{event_type_id}':
    parameters:
      - name: event_type_id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: get_event_type_by_id
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/event_type.v1.yaml
      operationId: get-events-event-types-event_type_id
      security:
        - api_key: []
  /api/events/event-types:
    get:
      summary: list_event_types
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/event_type.v1.yaml
      operationId: get-events-event-types
      security:
        - api_key: []
components:
  responses:
    GenericError:
      description: Error returned from the server. Alll errors(401, 404, etc) will have this shape.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericError'
  schemas:
    GenericError:
      type: object
      properties:
        code:
          type: integer
        description:
          type: string
        message:
          type: string
      required:
        - code
        - description
        - message
  securitySchemes:
    api_key:
      type: apiKey
      name: x-api-key
      in: header
